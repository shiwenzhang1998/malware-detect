import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import GridSearchCV
import joblib
from config import *
from sklearn.metrics import accuracy_score
from sklearn.metrics import recall_score
import warnings

def rf_train(X_train,Y_train,X_test,Y_test):
    RFModel = RandomForestClassifier(n_estimators=25,
                                     criterion="gini",
                                     max_depth=None,
                                     min_samples_split=5,
                                     min_samples_leaf=5,
                                     min_weight_fraction_leaf=0.,
                                     max_features="auto",
                                     max_leaf_nodes=None,
                                     min_impurity_decrease=0.,
                                     min_impurity_split=None,
                                     bootstrap=True,
                                     oob_score=False,
                                     n_jobs=None,
                                     random_state=None,
                                     verbose=0,
                                     warm_start=False,
                                     class_weight=None,
                                     ccp_alpha=0.0,
                                     max_samples=None)
    RFModel.fit(X_train, Y_train)

    joblib.dump(RFModel, "RF.dat")

    clsModel = joblib.load("RF.dat")
    Y_pred = clsModel.predict(X_test)

    accuracy = accuracy_score(Y_test, Y_pred)
    accuracy = round(accuracy * 100, 2)
    recall = recall_score(Y_test, Y_pred, average='macro')
    recall = round(recall * 100, 2)
    print("The predict accuracy of the RandomForest model is {}%".format(accuracy))
    print("The predict recall of the RandomForest model is {}%".format(recall))