import xgboost as xgb
import pandas as pd
import joblib
from sklearn.metrics import accuracy_score

params = {
        'booster': 'gbtree',
        'silent': 1,
        'learning_rate': 0.01,
        'min_child_weight': 3,
        'max_depth': 8,
        'gamma': 0.1,
        'subsample': 0.7,
        'colsample_bytree': 0.7,
        'lambda': 2,
        'objective': 'multi:softmax',
        'seed': 13
    }

def xgb_train(X_train,Y_train,X_test,Y_test):
    xgb_train = xgb.DMatrix(X_train, label=Y_train)
    xgb_test = xgb.DMatrix(X_test, label=Y_test)

    classNums=9
    params["num_class"]=classNums
    plst = list(params.items())

    num_rounds = 500
    watchlist = [(xgb_train, 'train'), (xgb_test, 'val')]

    model = xgb.train(plst, xgb_train, num_rounds, watchlist, early_stopping_rounds=150)
    joblib.dump(model, "xgboost.dat")

    clsModel=joblib.load("xgboost.dat")
    X_test=xgb.DMatrix(X_test)
    Y_pred = clsModel.predict(X_test)
    accuracy = accuracy_score(Y_test, Y_pred)
    print(accuracy)