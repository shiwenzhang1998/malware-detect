import codecs
import imageio
import array
from tqdm import tqdm
import math
import numpy as np
import os

def covert_asm2jpg(data_path):
    image_save_path = os.path.join(data_path,"asm_image")
    data_path = os.path.join(data_path,"malware")
    if not os.path.exists(image_save_path):
        os.makedirs(image_save_path)

    files = os.listdir(data_path)
    extract_images_from_text(files,data_path,image_save_path)

def extract_images_from_text(files, data_path,image_save_path):
    for file in tqdm(files,total=len(files)):
        if (file.endswith("asm")):
            file_path = os.path.join(data_path,file)
            ams_file = codecs.open(file_path)
            asm_file_size = os.path.getsize(file_path)

            image_size = math.ceil(math.sqrt(asm_file_size))

            padding = asm_file_size % image_size

            image = array.array('B')

            image.fromfile(ams_file, asm_file_size - padding)

            ams_file.close()

            image = np.reshape(image[:image_size * image_size],(image_size, image_size))

            image = np.uint8(image)

            image_save_path = os.path.join(image_save_path,os.path.basename(file_path).replace(".asm",".jpg"))

            imageio.imwrite(image_save_path,image)


if __name__ =="__main__":
    data_path=""
    covert_asm2jpg(data_path)